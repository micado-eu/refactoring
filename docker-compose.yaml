version: "3.7"

services:

  migrants_app_dev:
    image: micadoproject/quasar:1.1.2-cypress
    stdin_open: true
    tty: true
    volumes:
      - type: volume
        source: migrants_app
        target: /code
    ports:
      - "8000:8000"
      - "8080:8080"
    command: /bin/sh -c "npm install && quasar dev -m pwa"
    networks:
      - micado_net

  balancer:
    image: traefik:v2.1
    ports:
      - "80:80"
      - "8081:8080"
      - "443:443" # The HTTPS port
    volumes:
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml
      - ./traefik/dynamic.toml:/etc/traefik/dynamic.toml
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./traefik/certs:/etc/certs # SSL Development certificates
    networks:
      - micado_net
  micado_db:
    image: mdillon/postgis:11-alpine
    env_file:
      - .env
      - prod.env
    ports:
      - "5432:5432"
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
      - type: volume
        source: postgres_init
        target: /docker-entrypoint-initdb.d
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    networks:
      - micado_net
  backend:
    image: micadoproject/micado_backend
    stdin_open: true
    tty: true
    volumes:
      - type: volume
        source: backend
        target: /code
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - type: volume
        source: shared_images
        target: /images
    tmpfs: /tmp/translations
    ports:
      - "3000:3000"
    #     - "8080:8080"
    #    command: /bin/sh -c "cd backend && npm start"
    command: /bin/sh -c "bash"
    env_file:
      - .env
      - prod.env
    environment:
      - MICADO_GIT_URL=${MICADO_GIT_URL}
      - ROCKETCHAT_HOSTNAME=${ROCKETCHAT_HOSTNAME}
      - ROCKETCHAT_ADMIN=${ROCKETCHAT_ADMIN}
      - ROCKETCHAT_ADMIN_PWD=${ROCKETCHAT_ADMIN_PWD}
      # don't use the /tmp/translations from tmpfs because it gives a permission error (have to fix this).
      - MICADO_TRANSLATIONS_DIR=/tmp/translations-repo
      - POSTGRES_DB=${POSTGRES_DB}
      - MICADO_DB_PWD=${MICADO_DB_PWD}
      - MICADO_DB_USER=${MICADO_DB_USER}
      - MICADO_DB_SCHEMA=${MICADO_DB_SCHEMA}
      - WSO2_IDENTITY_ADMIN_PWD=${WSO2_IDENTITY_ADMIN_PWD}
      - WSO2_IDENTITY_ADMIN_USER=${WSO2_IDENTITY_ADMIN_USER}
      - MICADO_ENV=${MICADO_ENV}
      - IDENTITY_HOSTNAME=${IDENTITY_HOSTNAME}
      - WEBLATE_EMAIL_HOST=${WEBLATE_EMAIL_HOST}
      - WEBLATE_EMAIL_HOST_USER=${WEBLATE_EMAIL_HOST_USER}
      - WEBLATE_EMAIL_HOST_SSL=${WEBLATE_EMAIL_HOST_SSL}
      - WEBLATE_EMAIL_HOST_PASSWORD=${WEBLATE_EMAIL_HOST_PASSWORD}
      - ANALYTIC_HOSTNAME=${ANALYTIC_HOSTNAME}
      - COUNTLY_MIGRANTS_APP_ID=${COUNTLY_MIGRANTS_APP_ID}
      - COUNTLY_MIGRANTS_API_KEY=${COUNTLY_MIGRANTS_API_KEY}
      - COUNTLY_ADMIN=${COUNTLY_ADMIN}
      - COUNTLY_ADMIN_PWD=${COUNTLY_ADMIN_PWD}
      - ALGORITHM=${ALGORITHM}
      - SALT=${SALT}
      - KEY_LENGTH=${KEY_LENGTH}
      - BUFFER_0=${BUFFER_0}
      - BUFFER_1=${BUFFER_1}
      - ALGORITHM_PASSWORD=${ALGORITHM_PASSWORD}
    networks:
      - micado_net
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    env_file:
      - .env
      - prod.env
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: micado_db
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${KC_USER}
      DB_SCHEMA: ${KC_SCHEMA}
      DB_PASSWORD: ${KC_PWD}
      KEYCLOAK_USER: ${KC_ADMIN_USER}
      KEYCLOAK_PASSWORD: ${KC_ADMIN_PWD}
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 8090:8080
    networks:
      - micado_net
volumes:
  migrants_app:
    driver: local
    driver_opts:
      type: none
      # device is the path in the host that has to be absolute
      device: $PWD/app
      o: bind
  postgres_data:
    driver: local
    driver_opts:
      type: none
      # device is the path in the host that has to be absolute
      device: $PWD/db_data
      o: bind
  postgres_init:
    driver: local
    driver_opts:
      type: none
      # device is the path in the host that has to be absolute
      device: $PWD/db_init
      o: bind
  backend:
    driver: local
    driver_opts:
      type: none
      device: $PWD/application
      o: bind
  shared_images:
    driver: local
    driver_opts:
      type: none
      device: $PWD/shared_images
      o: bind
networks:
  micado_net:
    #    driver: bridge
    external: true
